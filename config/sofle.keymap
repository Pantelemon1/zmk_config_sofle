/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <54 53 52 51 50 55 56 57 58 59 41 29 17 5 4 3 2 1 0 12 13 14 15 16 28 27 26 25 24 36 37 38 39 40>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <50 51 52 53 54 55 56 57 58 59>;
            flavor = "tap-unless-interrupted";
        };

        mo_kp: mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <53 52 51 50 56 57 58 59 55 54 35>;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
        };

        tap_dance: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE";
            #binding-cells = <0>;
            bindings =
                <&kp SPACE>,
                <&kp LEFT_SHIFT>,
                <&kp LA(LEFT_SHIFT)>,
                <&kp NUMBER_4>;
        };

        kp_kp: kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_KP";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
        };

        tap_dance_2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&none>, <&none>;
        };
    };

    macros {
        test_makros: test_makros {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp H &kp E &kp L &kp L &kp O &kp SPACE &kp W &kp O &kp R &kp L &kp D &kp EXCL &kp EXCL &kp EXCL>;
            label = "TEST_MAKROS";
        };
    };

    combos {
        compatible = "zmk,combos";

        combos_mo3 {
            bindings = <&mo 3>;
            key-positions = <53 56>;
            require-prior-idle-ms = <175>;
        };

        ru_en {
            bindings = <&kp LS(LEFT_ALT)>;
            key-positions = <27 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp TAB     &kp N1  &kp N2    &kp N3        &kp N4                            &kp N5                                                        &kp N6              &kp N7                      &kp N8        &kp N9      &kp N0    &kp BACKSPACE
&kp GRAVE   &kp Q   &kp W     &kp E         &kp R                             &kp T                                                         &kp Y               &kp U                       &kp I         &kp O       &kp P     &kp LEFT_BRACKET
&kp ESCAPE  &kp A   &kp S     &kp D         &kp F                             &kp G                                                         &kp H               &kp J                       &kp K         &kp L       &kp SEMI  &kp SQT
&kp LSHFT   &kp Z   &kp X     &kp C         &kp V                             &kp B           &kp C_MUTE             &kp C_MUTE             &kp N               &kp M                       &kp COMMA     &kp PERIOD  &kp FSLH  &kp RSHFT
                    &kt CAPS  &kp LEFT_ALT  &kp_kp LEFT_CONTROL LS(NUMBER_1)  &mo_kp 1 SLASH  &HMR LEFT_GUI ENTER    &HMR LEFT_SHIFT SPACE  &mo_kp 3 LS(SLASH)  &kp_kp LEFT_CONTROL LS(N7)  &kp LEFT_ALT  &tap_dance
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // | `     |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | RAISE |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&none   &kp F1     &kp F2    &kp F3       &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8         &kp F9     &kp F10   &kp F11
&none   &kp N1     &kp N2    &kp N3       &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8         &kp N9     &kp N0    &kp F12
&trans  &kp EXCL   &kp AT    &kp HASH     &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp LS(ASTRK)  &kp LPAR   &kp RPAR  &kp_kp MINUS LS(MINUS)
&none   &kp EQUAL  &kp PIPE  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI       &kp COLON  &kp BSLH  &trans
                   &trans    &trans       &trans    &trans     &tog 4    &trans  &trans     &trans    &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |       |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                |  <-  |   v  |   ^   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&none  &none       &none           &none           &none            &none                     &none     &none          &none      &none      &none            &none
&none  &none       &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &none                     &none     &none          &none      &none      &kp PRINTSCREEN  &kp DELETE
&none  &none       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none                     &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &none            &kp BACKSPACE
&none  &kp K_UNDO  &kp K_CUT       &kp K_COPY      &kp K_PASTE      &none   &trans    &trans  &none     &kp PAGE_DOWN  &kt PG_UP  &none      &none            &none
                   &trans          &trans          &trans           &trans  &none     &mo 3   &trans    &trans         &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &bt BT_CLR_ALL                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                            &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &test_makros    &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                          &trans        &trans        &trans        &trans          &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4_num_lock {
            bindings = <
&none  &none  &none            &none            &none            &kp SLASH                       &none   &none   &none   &none   &none  &none
&none  &none  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp ASTERISK                    &none   &none   &none   &none   &none  &none
&none  &none  &kp KP_NUMBER_4  &kt KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS                       &none   &none   &none   &none   &none  &none
&none  &none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS      &trans    &trans  &none   &none   &none   &none   &none  &none
              &kp KP_NUMBER_0  &trans           &kt DOT          &trans        &tog 4    &none   &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        layer_5 {
            bindings = <
&none  &none  &none   &none   &none   &none                     &none   &none   &none   &none   &none  &none
&none  &none  &none   &none   &none   &none                     &none   &none   &none   &none   &none  &none
&none  &none  &none   &none   &none   &none                     &none   &none   &none   &none   &none  &none
&none  &none  &none   &none   &none   &none   &trans    &trans  &none   &none   &none   &none   &none  &none
              &trans  &trans  &trans  &trans  &trans    &tog 5  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        TEST {
            if-layers = <2>;
            then-layer = <3>;
        };
    };
};
